.. _installation_instruction:

========================
Installation instruction
========================

.. _dependencies:

Dependencies
============

OpenPIV would not have been possible if other great open source projects did not
exist. We make extensive use of code and tools that other people have created, so 
you should install them before you can use OpenPIV.

The dependencies are:

* `Python 2.7 or 3.6 <http://python.org/>`_
* `Scipy <http://numpy.scipy.org/>`_
* `Numpy <http://www.scipy.org/>`_
* `Cython <http://cython.org/>`_
* `scikit-image <http://scikit-image.org/>`_

The following distributions that include Python with the required libraries are recommended for easy installations of dependencies:

* Canopy <http://www.enthought.com>  
* Anaconda <https://store.continuum.io/cshop/anaconda/>  
* PythonXY <https://code.google.com/p/pythonxy/>  
* WinPython <http://winpython.sourceforge.net/>  

How to install the dependencies on Linux
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
On a Linux platform installing these dependencies should not be tricky. Often, if not always, 
python is installed by default, while the other dependencies should appear in your package
manager. 

Thanks for the issue raised on our Github page, the Ubuntu installation should work as:   

    sudo apt-get install cython python-numpy python-scipy
    
    pip2.7 install OpenPIV


Using Conda 
^^^^^^^^^^^

    conda install -c conda-forge openpiv
 
Should include all the missing packages and automatically build the dependenices. 


How to install the dependencies on Windows
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
On Windows all these dependencies, as well as several other useful packages, can be installed
using one of the aforementioned distributions, e.g. Anaconda, PythonXY. Note: Install it in Custom Directories, 
without spaces in the directory names (i.e. Program Files are prohibited), e.g. `C:\Pythonxy\`


How to install the dependencies on a Mac
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The binary (32 or 64 bit) Enthought Python Distribution (EPD) or Anaconda are recommended.  Note: if you use EPD Free distribution, you need to add and install Cython from http://www.cython.org


Missing package ``progressbar``
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 

Some distributions lack `progressbar` package. Install it separately using `pip`

    pip install progressbar


In Python 3 the project changed name to `progressbar2` package. Install it separately using `pip`

    pip install progressbar2
    
Or using Conda:   

    conda install progressbar2
    
We will remove this requirement in the future, so don't be surprised it if just works without progressbar. 

Get OpenPIV source code!
========================

At this moment the only way to get OpenPIV's source code is using git. 
`Git <http://en.wikipedia.org/wiki/Git_%28software%29>`_ Git is a distributed revision control system and 
our code is hosted at `GitHub <www.github.com>`_.

Bleeding edge development version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If you are interested in the source code you are welcome to browse out git repository
stored at https://github.com/alexlib/openpiv-python. If you want to download the source code
on your machine, for testing, you need to set up git on your computer. Please look at 
http://help.github.com/ which provide extensive help for how to set up git.

To follow the development of OpenPIV, clone our repository with the command::

    git clone http://github.com/alexlib/openpiv-python.git

and update from time to  time. You can also download a tarball containing everything.

Then add the path where the OpenPIV source are to the PYTHONPATH environment variable, so 
that OpenPIV module can be imported and used in your programs. Remeber to build the extension
with :: 

    python setup.py build_ext --inplace 
    

Module import on Windows 7 64-bit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
If you are working on a Windows 7 64-bit computer, you may face several problems while trying
to import the OpenPIV modules. The following instructions provide a workaround and a short list
of issues encountered while trying other alternatives than the one here presented.

Install Enthought Canopy 32-bit no matter if the OS is 64-bit.

Install Visual Studio 8 Express (32 bit) from 
    
    http://download.microsoft.com/download/A/5/4/A54BADB6-9C3F-478D-8657-93B3FC9FE62D/vcsetup.exe

Install the full version of Windows SDK for Windows 7 and .NET Framework 3.5 SP1 from
    
    http://www.microsoft.com/en-us/download/details.aspx?id=3138

Remove in /openpiv/src/ the two .c files: lib.c and process.c - so they'll be regenerated by 
Cython from the .pyx files

In Command Prompt Interface, while executing Python, go to the directory containing OpenPIV and 
import the OpenPIV modules with:
    
    python setup.py build_ext --inplace


PS. I have had a similar experience while working with a GIS system on a Windows 64-bit machine and 
trying to get Python modules to work. I started with a Python 64-bit MSI Installer and was not able 
to find the modules from the GIS system. I ended up installing the Python 32-bit version which worked. 
My uneducated (perhaps obvious) guess is that the problem lies on the flavour. Maybe a header line 
stating this (if proved) would be good. 


Issues that led to this Workaround: 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
When using the visual Studio Redistributable Setup x64 the vcvarsall.bat file may not be 
available, which is needed to activate the C+ compiler. 

When installing just the C+ compiler tools from SDK the fike basetsd.h may not be 
available or simply not found, causing cl.exe to not be properly executed, with following 
error message:
    "Fatal error C1083: Cannot open include file: 'basetsd.h': No such file or directory
    error: command '"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\BIN\cl.exe"

If the command line python setup.py build is used, the following error may appear: 
    "ImportError: No module named lib"

The use of MinGW instead of Visual Studio for the C compiler has been tried and produces 
the same error as above:
    "ImportError: No module named lib"


.. Stable source distribution
.. ^^^^^^^^^^^^^^^^^^^^^^^^^^
.. If you do not want to follow the development of OpenPIV and you prefer a more stable
.. version, download the source distributions available at http://www.openpiv.sourceforge.net,
.. in the downloads page. Then unpack it and execute the following command::

..    python setupy.py install --prefix=$DIR
    
.. where ``$DIR`` is the folder you want ot install OpenPIV in. If you want to install it system
.. wide omit the ``--prefix`` option, but you should have root priviles to do so. Remember to 
.. update the PYTHONPATH environment variable if you used a custom installation directory.


.. Download pre-built binary distributions
.. =======================================

.. For Windows we provide pre-built distributions which can be used without the hassles
.. of compilation and other boring things you may not want to dig into. This is currently a work
.. in progress. Check back soon!





Having problems?
================
If you encountered some issues, found difficult to install OpenPIV following these instructions
please drop us an email to openpiv-users@googlegroups.com , so that we can help you and 
improve this page!





